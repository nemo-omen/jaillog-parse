/**
 * Transform a hast tree to a DOM tree
 *
 * @param {HastNode} node
 * @param {Options} [options]
 * @returns {Node}
 */
export function toDom(node: HastNode, options?: Options): Node
export type HastParent = import('hast').Parent
export type HastRoot = import('hast').Root
export type HastDoctype = import('hast').DocType
export type HastElement = import('hast').Element
export type HastText = import('hast').Text
export type HastComment = import('hast').Comment
export type HastChild = HastParent['children'][number]
export type HastNode = HastChild | HastRoot
export type Options = {
  /**
   * Whether a DOM fragment should be returned
   */
  fragment?: boolean
  /**
   * Document interface to use (default: `globalThis.document`)
   */
  document?: Document
  /**
   * `namespace` to use to create elements
   */
  namespace?: string
}
export type Context = {
  doc: Document
  fragment?: boolean
  namespace?: string
  impliedNamespace?: string
}
